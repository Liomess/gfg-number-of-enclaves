from typing import List
from collections import deque
class Solution:    
    def numberOfEnclaves(self, mat: List[List[int]]) -> int:
        n,ans,m=len(mat),0,len(mat[0])
        q=deque()
        vis=[[0 for i in range(m)]for j in range(n)]
        for col in range(m):
            if mat[0][col]==1 and vis[0][col]==0:
                q.append([0,col])
                vis[0][col]=1
            if mat[n-1][col]==1 and vis[n-1][col]==0:
                q.append([n-1,col])
                vis[n-1][col]=1
        for row in range(n):
            if mat[row][0]==1 and vis[row][0]==0:
                q.append([row,0])
                vis[row][0]=1
            if mat[row][m-1]==1 and vis[row][m-1]==0:
                q.append([row,m-1])
                vis[row][m-1]=1
        while len(q)!=0:
            i,j=q.popleft()
            if i-1>=0 and mat[i-1][j]==1 and vis[i-1][j]==0:
                q.append([i-1,j])
                vis[i-1][j]=1
            if i+1<n and mat[i+1][j]==1 and vis[i+1][j]==0:
                q.append([i+1,j])
                vis[i+1][j]=1
            if j-1>=0 and mat[i][j-1]==1 and vis[i][j-1]==0:
                q.append([i,j-1])
                vis[i][j-1]=1
            if j+1<m and mat[i][j+1]==1 and vis[i][j+1]==0:
                q.append([i,j+1])
                vis[i][j+1]=1
        for i in range(n):
            for j in range(m):
                if mat[i][j]==1 and vis[i][j]==0:
                    ans+=1
        return ans
